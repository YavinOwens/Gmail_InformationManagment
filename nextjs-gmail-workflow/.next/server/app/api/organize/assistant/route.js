"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/organize/assistant/route";
exports.ids = ["app/api/organize/assistant/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Forganize%2Fassistant%2Froute&page=%2Fapi%2Forganize%2Fassistant%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forganize%2Fassistant%2Froute.ts&appDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Forganize%2Fassistant%2Froute&page=%2Fapi%2Forganize%2Fassistant%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forganize%2Fassistant%2Froute.ts&appDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_yavin_python_projects_gmail_information_tagging_nextjs_gmail_workflow_src_app_api_organize_assistant_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/organize/assistant/route.ts */ \"(rsc)/./src/app/api/organize/assistant/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/organize/assistant/route\",\n        pathname: \"/api/organize/assistant\",\n        filename: \"route\",\n        bundlePath: \"app/api/organize/assistant/route\"\n    },\n    resolvedPagePath: \"/Users/yavin/python_projects/gmail_information_tagging/nextjs-gmail-workflow/src/app/api/organize/assistant/route.ts\",\n    nextConfigOutput,\n    userland: _Users_yavin_python_projects_gmail_information_tagging_nextjs_gmail_workflow_src_app_api_organize_assistant_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/organize/assistant/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZvcmdhbml6ZSUyRmFzc2lzdGFudCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGb3JnYW5pemUlMkZhc3Npc3RhbnQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZvcmdhbml6ZSUyRmFzc2lzdGFudCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnlhdmluJTJGcHl0aG9uX3Byb2plY3RzJTJGZ21haWxfaW5mb3JtYXRpb25fdGFnZ2luZyUyRm5leHRqcy1nbWFpbC13b3JrZmxvdyUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZ5YXZpbiUyRnB5dGhvbl9wcm9qZWN0cyUyRmdtYWlsX2luZm9ybWF0aW9uX3RhZ2dpbmclMkZuZXh0anMtZ21haWwtd29ya2Zsb3cmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ29FO0FBQ2pKO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ21haWwtYXBpLXdvcmtmbG93Lz8xNTZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy95YXZpbi9weXRob25fcHJvamVjdHMvZ21haWxfaW5mb3JtYXRpb25fdGFnZ2luZy9uZXh0anMtZ21haWwtd29ya2Zsb3cvc3JjL2FwcC9hcGkvb3JnYW5pemUvYXNzaXN0YW50L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9vcmdhbml6ZS9hc3Npc3RhbnQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9vcmdhbml6ZS9hc3Npc3RhbnRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL29yZ2FuaXplL2Fzc2lzdGFudC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy95YXZpbi9weXRob25fcHJvamVjdHMvZ21haWxfaW5mb3JtYXRpb25fdGFnZ2luZy9uZXh0anMtZ21haWwtd29ya2Zsb3cvc3JjL2FwcC9hcGkvb3JnYW5pemUvYXNzaXN0YW50L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9vcmdhbml6ZS9hc3Npc3RhbnQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Forganize%2Fassistant%2Froute&page=%2Fapi%2Forganize%2Fassistant%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forganize%2Fassistant%2Froute.ts&appDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/organize/assistant/route.ts":
/*!*************************************************!*\
  !*** ./src/app/api/organize/assistant/route.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var ollama__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ollama */ \"(rsc)/./node_modules/ollama/dist/index.mjs\");\n\n\nconst ollama = new ollama__WEBPACK_IMPORTED_MODULE_1__.Ollama({\n    host: \"http://localhost:11434\"\n});\nasync function POST(request) {\n    try {\n        const { question, email, tone, conversationHistory } = await request.json();\n        console.log(\"Assistant request received:\", {\n            question: question?.substring(0, 50) + \"...\",\n            emailSubject: email?.subject,\n            tone,\n            hasHistory: !!conversationHistory?.length\n        });\n        if (!process.env.OPENAI_API_KEY) {\n            console.error(\"OpenAI API key not configured\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"OpenAI API key not configured\"\n            }, {\n                status: 500\n            });\n        }\n        if (!email || !question) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Email and question are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Prepare conversation context\n        const systemPrompt = `You are an intelligent email assistant. You help users understand and respond to their emails. \n    \nCurrent email context:\n- Subject: ${email.subject}\n- From: ${email.sender}\n- Date: ${email.date}\n- Content: ${email.body || email.snippet}\n- Labels: ${email.labels.join(\", \")}\n- Theme: ${email.theme || \"uncategorized\"}\n- Category: ${email.category || \"general\"}\n\nTone preference: ${tone}\n\nProvide helpful, contextual responses about the email. Be concise but informative.`;\n        // Prepare conversation history\n        const messages = [\n            {\n                role: \"system\",\n                content: systemPrompt\n            }\n        ];\n        // Add conversation history (limit to last 10 messages to manage token usage)\n        if (conversationHistory && Array.isArray(conversationHistory)) {\n            const recentHistory = conversationHistory.slice(-10);\n            recentHistory.forEach((msg)=>{\n                messages.push({\n                    role: msg.role,\n                    content: msg.content\n                });\n            });\n        }\n        // Add current question\n        messages.push({\n            role: \"user\",\n            content: question\n        });\n        console.log(\"Making OpenAI API call with\", messages.length, \"messages\");\n        console.log(\"Making Ollama API call with\", messages.length, \"messages\");\n        const completion = await ollama.chat({\n            model: \"phi3\",\n            messages: messages.map((msg)=>({\n                    role: msg.role,\n                    content: msg.content\n                }))\n        });\n        const response = completion.message?.content || \"I apologize, but I couldn't process your request.\";\n        console.log(\"Ollama response received:\", response.substring(0, 100) + \"...\");\n        // Generate a draft response if the question is about responding\n        let draftResponse = \"\";\n        if (question.toLowerCase().includes(\"reply\") || question.toLowerCase().includes(\"respond\") || question.toLowerCase().includes(\"draft\")) {\n            const draftPrompt = `Based on the email context and the user's request, generate a professional draft response. \n      \nEmail: ${email.subject} from ${email.sender}\nContent: ${email.body || email.snippet}\nUser request: ${question}\nTone: ${tone}\n\nGenerate a draft email response that is:\n- Contextually appropriate\n- Matches the requested tone\n- Professional and well-structured\n- Ready to be edited by the user`;\n            const draftCompletion = await ollama.chat({\n                model: \"phi3\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are an expert email writer. Generate professional, contextual email responses.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: draftPrompt\n                    }\n                ]\n            });\n            draftResponse = draftCompletion.message?.content || \"\";\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            response,\n            draftResponse\n        });\n    } catch (error) {\n        console.error(\"Error processing assistant request:\", error);\n        console.error(\"Error details:\", {\n            message: error instanceof Error ? error.message : \"Unknown error\",\n            stack: error instanceof Error ? error.stack : undefined\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to process assistant request\",\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/organize/assistant/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/whatwg-fetch","vendor-chunks/ollama"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Forganize%2Fassistant%2Froute&page=%2Fapi%2Forganize%2Fassistant%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forganize%2Fassistant%2Froute.ts&appDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyavin%2Fpython_projects%2Fgmail_information_tagging%2Fnextjs-gmail-workflow&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();